# Elasticsearch Helm chart values
clusterName: "arketic-logs"
nodeGroup: "master"

masterService: "arketic-logs-master"

roles:
  master: "true"
  ingest: "true"
  data: "true"
  remote_cluster_client: "true"
  ml: "false"

replicas: 3
minimumMasterNodes: 2

esMajorVersion: ""

esConfig:
  elasticsearch.yml: |
    cluster.name: arketic-logs
    network.host: 0.0.0.0
    discovery.seed_hosts: "arketic-logs-master-headless"
    cluster.initial_master_nodes: "arketic-logs-master-0,arketic-logs-master-1,arketic-logs-master-2"
    
    # Security
    xpack.security.enabled: true
    xpack.security.transport.ssl.enabled: true
    xpack.security.transport.ssl.verification_mode: certificate
    xpack.security.transport.ssl.keystore.path: /usr/share/elasticsearch/config/certs/elastic-keystore.p12
    xpack.security.transport.ssl.truststore.path: /usr/share/elasticsearch/config/certs/elastic-keystore.p12
    
    # Index lifecycle management
    xpack.ilm.enabled: true
    
    # Monitoring
    xpack.monitoring.collection.enabled: true

extraEnvs:
  - name: ELASTIC_PASSWORD
    valueFrom:
      secretKeyRef:
        name: elasticsearch-master-credentials
        key: password
  - name: ELASTIC_USERNAME
    valueFrom:
      secretKeyRef:
        name: elasticsearch-master-credentials
        key: username

secretMounts:
  - name: elastic-keystore
    secretName: elastic-keystore
    path: /usr/share/elasticsearch/config/certs

persistence:
  enabled: true
  size: 100Gi
  storageClass: "fast-ssd"

resources:
  requests:
    cpu: "1000m"
    memory: "2Gi"
  limits:
    cpu: "2000m"
    memory: "4Gi"

initResources:
  limits:
    cpu: "25m"
    memory: "128Mi"
  requests:
    cpu: "25m"
    memory: "128Mi"

networkHost: "0.0.0.0"

volumeClaimTemplate:
  accessModes: ["ReadWriteOnce"]
  storageClassName: "fast-ssd"
  resources:
    requests:
      storage: 100Gi

rbac:
  create: true
  serviceAccountAnnotations: {}
  serviceAccountName: ""

podSecurityPolicy:
  create: false
  name: ""
  spec:
    privileged: true
    fsGroup:
      rule: RunAsAny
    runAsUser:
      rule: RunAsAny
    seLinux:
      rule: RunAsAny
    supplementalGroups:
      rule: RunAsAny
    volumes:
      - secret
      - configMap
      - persistentVolumeClaim

antiAffinity: "hard"

# Shrink default JVM heap.
esJavaOpts: "-Xmx2g -Xms2g"

# Allocate smaller chunks of memory per pod.
resources:
  requests:
    cpu: "1000m"
    memory: "2Gi"
  limits:
    cpu: "2000m"
    memory: "4Gi"

# Request smaller persistent volumes.
volumeClaimTemplate:
  accessModes: ["ReadWriteOnce"]
  storageClassName: "fast-ssd"
  resources:
    requests:
      storage: 100Gi

tests:
  enabled: true