{
  "timestamp": "2025-08-06T07:35:19.374Z",
  "environment": "Docker",
  "totalTests": 19,
  "passed": 11,
  "failed": 3,
  "skipped": 5,
  "results": [
    {
      "name": "API Health Check",
      "status": "PASSED",
      "duration": 12,
      "timestamp": "2025-08-06T07:35:19.388Z",
      "details": {
        "endpoint": "/health",
        "status": 200
      }
    },
    {
      "name": "Web Health Check",
      "status": "PASSED",
      "duration": 9,
      "timestamp": "2025-08-06T07:35:19.397Z",
      "details": {
        "endpoint": "/api/health",
        "status": 200
      }
    },
    {
      "name": "Nginx Health Check",
      "status": "PASSED",
      "duration": 2,
      "timestamp": "2025-08-06T07:35:19.400Z",
      "details": {
        "endpoint": "/health",
        "status": 200
      }
    },
    {
      "name": "Valid User Registration",
      "status": "FAILED",
      "duration": 195,
      "timestamp": "2025-08-06T07:35:19.595Z",
      "details": {
        "email": "test_6b902830-5e69-44f1-b28a-bd42688a2ffe@example.com",
        "error": {
          "detail": "Registration failed: 'AsyncSession' object has no attribute 'query'"
        }
      }
    },
    {
      "name": "Duplicate Email Registration",
      "status": "PASSED",
      "duration": 3,
      "timestamp": "2025-08-06T07:35:19.598Z",
      "details": {
        "expectedStatus": 400,
        "actualStatus": 400,
        "error": {
          "detail": "A user with this email already exists"
        }
      }
    },
    {
      "name": "Invalid Email Registration",
      "status": "PASSED",
      "duration": 2,
      "timestamp": "2025-08-06T07:35:19.600Z",
      "details": {
        "expectedStatus": 422,
        "actualStatus": 422,
        "error": {
          "detail": [
            {
              "type": "value_error",
              "loc": [
                "body",
                "email"
              ],
              "msg": "value is not a valid email address: The email address is not valid. It must have exactly one @-sign.",
              "input": "invalid-email",
              "ctx": {
                "reason": "The email address is not valid. It must have exactly one @-sign."
              }
            }
          ]
        }
      }
    },
    {
      "name": "Weak Password Registration",
      "status": "PASSED",
      "duration": 1,
      "timestamp": "2025-08-06T07:35:19.601Z",
      "details": {
        "expectedStatus": 422,
        "actualStatus": 422,
        "error": {
          "detail": [
            {
              "type": "string_too_short",
              "loc": [
                "body",
                "password"
              ],
              "msg": "String should have at least 8 characters",
              "input": "123",
              "ctx": {
                "min_length": 8
              },
              "url": "https://errors.pydantic.dev/2.5/v/string_too_short"
            },
            {
              "type": "string_too_short",
              "loc": [
                "body",
                "confirm_password"
              ],
              "msg": "String should have at least 8 characters",
              "input": "123",
              "ctx": {
                "min_length": 8
              },
              "url": "https://errors.pydantic.dev/2.5/v/string_too_short"
            }
          ]
        }
      }
    },
    {
      "name": "Login/Logout Flow",
      "status": "SKIPPED",
      "duration": 0,
      "timestamp": "2025-08-06T07:35:19.602Z",
      "details": {
        "reason": "No registered users available"
      }
    },
    {
      "name": "JWT Token Validation",
      "status": "SKIPPED",
      "duration": 0,
      "timestamp": "2025-08-06T07:35:19.602Z",
      "details": {
        "reason": "No valid tokens available"
      }
    },
    {
      "name": "Protected Routes",
      "status": "SKIPPED",
      "duration": 0,
      "timestamp": "2025-08-06T07:35:19.602Z",
      "details": {
        "reason": "No valid tokens available"
      }
    },
    {
      "name": "Token Refresh",
      "status": "SKIPPED",
      "duration": 0,
      "timestamp": "2025-08-06T07:35:19.602Z",
      "details": {
        "reason": "No valid tokens available"
      }
    },
    {
      "name": "Password Reset Flow",
      "status": "SKIPPED",
      "duration": 0,
      "timestamp": "2025-08-06T07:35:19.602Z",
      "details": {
        "reason": "No registered users available"
      }
    },
    {
      "name": "Rate Limiting - Login Attempts",
      "status": "PASSED",
      "duration": 9,
      "timestamp": "2025-08-06T07:35:19.611Z",
      "details": {
        "attempts": 6,
        "rateLimitTriggered": true,
        "statusCodes": [
          429,
          429,
          429,
          429,
          429,
          429
        ]
      }
    },
    {
      "name": "SQL Injection Protection",
      "status": "PASSED",
      "duration": 1,
      "timestamp": "2025-08-06T07:35:19.613Z",
      "details": {
        "status": 422,
        "note": "Should not cause server error",
        "error": {
          "detail": [
            {
              "type": "value_error",
              "loc": [
                "body",
                "email"
              ],
              "msg": "value is not a valid email address: The email address is not valid. It must have exactly one @-sign.",
              "input": "admin'; DROP TABLE users; --",
              "ctx": {
                "reason": "The email address is not valid. It must have exactly one @-sign."
              }
            }
          ]
        }
      }
    },
    {
      "name": "XSS Protection",
      "status": "FAILED",
      "duration": 172,
      "timestamp": "2025-08-06T07:35:19.784Z",
      "details": {
        "status": 500,
        "note": "Should either sanitize input or reject with validation error",
        "error": {
          "detail": "Registration failed: 'AsyncSession' object has no attribute 'query'"
        }
      }
    },
    {
      "name": "Concurrent Request Handling",
      "status": "PASSED",
      "duration": 7,
      "timestamp": "2025-08-06T07:35:19.793Z",
      "details": {
        "concurrentRequests": 10,
        "successfulRequests": 10,
        "averageResponseTime": 7,
        "maxResponseTime": 8,
        "successRate": "100%"
      }
    },
    {
      "name": "Frontend Health Check",
      "status": "PASSED",
      "duration": 9,
      "timestamp": "2025-08-06T07:35:19.802Z",
      "details": {
        "status": 200
      }
    },
    {
      "name": "CORS Configuration",
      "status": "PASSED",
      "duration": 1,
      "timestamp": "2025-08-06T07:35:19.804Z",
      "details": {
        "status": 200,
        "allowOrigin": "http://localhost:3000",
        "allowMethods": "DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT"
      }
    },
    {
      "name": "Nginx API Routing",
      "status": "FAILED",
      "duration": 2,
      "timestamp": "2025-08-06T07:35:19.805Z",
      "details": {
        "error": "Request failed with status code 404"
      }
    }
  ],
  "metrics": {
    "totalDuration": 431,
    "averageResponseTime": 22,
    "slowestTest": {
      "name": "Valid User Registration",
      "duration": 195.109902
    },
    "fastestTest": {
      "name": "Login/Logout Flow",
      "duration": 0
    }
  }
}