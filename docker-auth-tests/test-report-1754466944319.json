{
  "timestamp": "2025-08-06T07:55:42.670Z",
  "environment": "Docker",
  "totalTests": 31,
  "passed": 20,
  "failed": 11,
  "skipped": 0,
  "results": [
    {
      "name": "API Health Check",
      "status": "PASSED",
      "duration": 15,
      "timestamp": "2025-08-06T07:55:42.687Z",
      "details": {
        "endpoint": "/health",
        "status": 200
      }
    },
    {
      "name": "Web Health Check",
      "status": "PASSED",
      "duration": 8,
      "timestamp": "2025-08-06T07:55:42.695Z",
      "details": {
        "endpoint": "/api/health",
        "status": 200
      }
    },
    {
      "name": "Nginx Health Check",
      "status": "PASSED",
      "duration": 2,
      "timestamp": "2025-08-06T07:55:42.697Z",
      "details": {
        "endpoint": "/health",
        "status": 200
      }
    },
    {
      "name": "Valid User Registration",
      "status": "PASSED",
      "duration": 190,
      "timestamp": "2025-08-06T07:55:42.888Z",
      "details": {
        "email": "test_91068cba-f87c-4a5e-a76b-7f2eff0e74c9@example.com",
        "status": 201
      }
    },
    {
      "name": "Duplicate Email Registration",
      "status": "PASSED",
      "duration": 4,
      "timestamp": "2025-08-06T07:55:42.980Z",
      "details": {
        "expectedStatus": 400,
        "actualStatus": 400,
        "error": {
          "detail": "A user with this email already exists"
        }
      }
    },
    {
      "name": "Invalid Email Registration",
      "status": "PASSED",
      "duration": 2,
      "timestamp": "2025-08-06T07:55:42.982Z",
      "details": {
        "expectedStatus": 422,
        "actualStatus": 422,
        "error": {
          "detail": [
            {
              "type": "value_error",
              "loc": [
                "body",
                "email"
              ],
              "msg": "value is not a valid email address: The email address is not valid. It must have exactly one @-sign.",
              "input": "invalid-email",
              "ctx": {
                "reason": "The email address is not valid. It must have exactly one @-sign."
              }
            }
          ]
        }
      }
    },
    {
      "name": "Weak Password Registration",
      "status": "PASSED",
      "duration": 2,
      "timestamp": "2025-08-06T07:55:42.984Z",
      "details": {
        "expectedStatus": 422,
        "actualStatus": 422,
        "error": {
          "detail": [
            {
              "type": "string_too_short",
              "loc": [
                "body",
                "password"
              ],
              "msg": "String should have at least 8 characters",
              "input": "123",
              "ctx": {
                "min_length": 8
              },
              "url": "https://errors.pydantic.dev/2.5/v/string_too_short"
            },
            {
              "type": "string_too_short",
              "loc": [
                "body",
                "confirm_password"
              ],
              "msg": "String should have at least 8 characters",
              "input": "123",
              "ctx": {
                "min_length": 8
              },
              "url": "https://errors.pydantic.dev/2.5/v/string_too_short"
            }
          ]
        }
      }
    },
    {
      "name": "Valid Login",
      "status": "PASSED",
      "duration": 183,
      "timestamp": "2025-08-06T07:55:43.167Z",
      "details": {
        "email": "test_91068cba-f87c-4a5e-a76b-7f2eff0e74c9@example.com",
        "status": 200,
        "hasAccessToken": true,
        "hasRefreshToken": true
      }
    },
    {
      "name": "Invalid Credentials Login",
      "status": "PASSED",
      "duration": 181,
      "timestamp": "2025-08-06T07:55:43.349Z",
      "details": {
        "expectedStatus": 401,
        "actualStatus": 401,
        "error": {
          "detail": "Invalid email or password"
        }
      }
    },
    {
      "name": "Non-existent User Login",
      "status": "PASSED",
      "duration": 4,
      "timestamp": "2025-08-06T07:55:43.352Z",
      "details": {
        "expectedStatus": 401,
        "actualStatus": 401,
        "error": {
          "detail": "Invalid email or password"
        }
      }
    },
    {
      "name": "Valid Logout",
      "status": "FAILED",
      "duration": 2,
      "timestamp": "2025-08-06T07:55:43.354Z",
      "details": {
        "error": {
          "detail": [
            {
              "type": "missing",
              "loc": [
                "body"
              ],
              "msg": "Field required",
              "input": null,
              "url": "https://errors.pydantic.dev/2.5/v/missing"
            }
          ]
        }
      }
    },
    {
      "name": "Valid Token Access",
      "status": "FAILED",
      "duration": 3,
      "timestamp": "2025-08-06T07:55:43.357Z",
      "details": {
        "hasUserData": false,
        "error": {
          "detail": "Failed to get user session: 'AsyncSession' object has no attribute 'query'"
        }
      }
    },
    {
      "name": "Invalid Token Access",
      "status": "PASSED",
      "duration": 2,
      "timestamp": "2025-08-06T07:55:43.359Z",
      "details": {
        "expectedStatus": 401,
        "actualStatus": 401,
        "error": {
          "detail": "Could not validate credentials"
        }
      }
    },
    {
      "name": "Missing Token Access",
      "status": "FAILED",
      "duration": 1,
      "timestamp": "2025-08-06T07:55:43.360Z",
      "details": {
        "expectedStatus": 401,
        "actualStatus": 403,
        "error": {
          "detail": "Not authenticated"
        }
      }
    },
    {
      "name": "User Profile - With Token",
      "status": "FAILED",
      "duration": 3,
      "timestamp": "2025-08-06T07:55:43.363Z",
      "details": {
        "endpoint": "/auth/me",
        "status": 500,
        "error": {
          "detail": "Failed to get user session: 'AsyncSession' object has no attribute 'query'"
        }
      }
    },
    {
      "name": "User Profile - Without Token",
      "status": "FAILED",
      "duration": 1,
      "timestamp": "2025-08-06T07:55:43.364Z",
      "details": {
        "endpoint": "/auth/me",
        "expectedStatus": 401,
        "actualStatus": 403,
        "error": {
          "detail": "Not authenticated"
        }
      }
    },
    {
      "name": "User Profile Extended - With Token",
      "status": "PASSED",
      "duration": 1,
      "timestamp": "2025-08-06T07:55:43.366Z",
      "details": {
        "endpoint": "/users/profile",
        "status": 404,
        "error": {
          "detail": "Not Found"
        }
      }
    },
    {
      "name": "User Profile Extended - Without Token",
      "status": "FAILED",
      "duration": 1,
      "timestamp": "2025-08-06T07:55:43.367Z",
      "details": {
        "endpoint": "/users/profile",
        "expectedStatus": 401,
        "actualStatus": 404,
        "error": {
          "detail": "Not Found"
        }
      }
    },
    {
      "name": "Logout - With Token",
      "status": "PASSED",
      "duration": 1,
      "timestamp": "2025-08-06T07:55:43.369Z",
      "details": {
        "endpoint": "/auth/logout",
        "status": 422,
        "error": {
          "detail": [
            {
              "type": "missing",
              "loc": [
                "body"
              ],
              "msg": "Field required",
              "input": null,
              "url": "https://errors.pydantic.dev/2.5/v/missing"
            }
          ]
        }
      }
    },
    {
      "name": "Logout - Without Token",
      "status": "FAILED",
      "duration": 1,
      "timestamp": "2025-08-06T07:55:43.370Z",
      "details": {
        "endpoint": "/auth/logout",
        "expectedStatus": 401,
        "actualStatus": 422,
        "error": {
          "detail": [
            {
              "type": "missing",
              "loc": [
                "body"
              ],
              "msg": "Field required",
              "input": null,
              "url": "https://errors.pydantic.dev/2.5/v/missing"
            }
          ]
        }
      }
    },
    {
      "name": "Valid Token Refresh",
      "status": "FAILED",
      "duration": 11,
      "timestamp": "2025-08-06T07:55:43.381Z",
      "details": {
        "hasNewAccessToken": false,
        "error": {
          "detail": "Token refresh failed: 'AsyncSession' object has no attribute 'query'"
        }
      }
    },
    {
      "name": "Invalid Refresh Token",
      "status": "PASSED",
      "duration": 3,
      "timestamp": "2025-08-06T07:55:43.384Z",
      "details": {
        "expectedStatus": 401,
        "actualStatus": 401,
        "error": {
          "detail": "Invalid or expired refresh token"
        }
      }
    },
    {
      "name": "Password Reset Request",
      "status": "FAILED",
      "duration": 1,
      "timestamp": "2025-08-06T07:55:43.385Z",
      "details": {
        "email": "test_91068cba-f87c-4a5e-a76b-7f2eff0e74c9@example.com",
        "error": {
          "detail": "Not Found"
        }
      }
    },
    {
      "name": "Password Reset - Non-existent Email",
      "status": "FAILED",
      "duration": 1,
      "timestamp": "2025-08-06T07:55:43.387Z",
      "details": {
        "note": "Should return 200 for security reasons",
        "error": {
          "detail": "Not Found"
        }
      }
    },
    {
      "name": "Rate Limiting - Login Attempts",
      "status": "PASSED",
      "duration": 733,
      "timestamp": "2025-08-06T07:55:44.120Z",
      "details": {
        "attempts": 6,
        "rateLimitTriggered": true,
        "statusCodes": [
          401,
          401,
          401,
          401,
          429,
          429
        ]
      }
    },
    {
      "name": "SQL Injection Protection",
      "status": "PASSED",
      "duration": 1,
      "timestamp": "2025-08-06T07:55:44.121Z",
      "details": {
        "status": 422,
        "note": "Should not cause server error",
        "error": {
          "detail": [
            {
              "type": "value_error",
              "loc": [
                "body",
                "email"
              ],
              "msg": "value is not a valid email address: The email address is not valid. It must have exactly one @-sign.",
              "input": "admin'; DROP TABLE users; --",
              "ctx": {
                "reason": "The email address is not valid. It must have exactly one @-sign."
              }
            }
          ]
        }
      }
    },
    {
      "name": "XSS Protection",
      "status": "PASSED",
      "duration": 178,
      "timestamp": "2025-08-06T07:55:44.299Z",
      "details": {
        "status": 201,
        "note": "Should either sanitize input or reject with validation error"
      }
    },
    {
      "name": "Concurrent Request Handling",
      "status": "PASSED",
      "duration": 8,
      "timestamp": "2025-08-06T07:55:44.309Z",
      "details": {
        "concurrentRequests": 10,
        "successfulRequests": 10,
        "averageResponseTime": 8,
        "maxResponseTime": 8,
        "successRate": "100%"
      }
    },
    {
      "name": "Frontend Health Check",
      "status": "PASSED",
      "duration": 7,
      "timestamp": "2025-08-06T07:55:44.316Z",
      "details": {
        "status": 200
      }
    },
    {
      "name": "CORS Configuration",
      "status": "PASSED",
      "duration": 1,
      "timestamp": "2025-08-06T07:55:44.317Z",
      "details": {
        "status": 200,
        "allowOrigin": "http://localhost:3000",
        "allowMethods": "DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT"
      }
    },
    {
      "name": "Nginx API Routing",
      "status": "FAILED",
      "duration": 2,
      "timestamp": "2025-08-06T07:55:44.319Z",
      "details": {
        "error": "Request failed with status code 404"
      }
    }
  ],
  "metrics": {
    "totalDuration": 1648,
    "averageResponseTime": 50,
    "slowestTest": {
      "name": "Rate Limiting - Login Attempts",
      "duration": 733.0029290000001
    },
    "fastestTest": {
      "name": "User Profile - Without Token",
      "duration": 1.0758759999999938
    }
  }
}